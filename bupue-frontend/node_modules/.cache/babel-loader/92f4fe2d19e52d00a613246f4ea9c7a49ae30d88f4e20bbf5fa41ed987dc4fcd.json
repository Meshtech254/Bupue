{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chapl\\\\bupue\\\\bupue-frontend\\\\src\\\\components\\\\comments\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [editingId, setEditingId] = useState(null);\n  const [editText, setEditText] = useState('');\n  const [editError, setEditError] = useState('');\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\n  const fetchComments = async () => {\n    try {\n      const res = await axios.get(`/api/events/${postId}/comments`);\n      setComments(res.data);\n    } catch (err) {\n      setError('Failed to load comments');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchComments();\n    // eslint-disable-next-line\n  }, [postId]);\n  const isAuthor = comment => user && comment.author && user.id === comment.author._id;\n  const handleEdit = comment => {\n    setEditingId(comment._id);\n    setEditText(comment.text);\n    setEditError('');\n  };\n  const handleEditChange = e => setEditText(e.target.value);\n  const handleEditSubmit = async (e, commentId) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axios.put(`/api/events/${postId}/comments/${commentId}`, {\n        text: editText\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setEditingId(null);\n      fetchComments();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setEditError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to update comment');\n    }\n  };\n  const handleDelete = async commentId => {\n    if (!window.confirm('Are you sure you want to delete this comment?')) return;\n    try {\n      const token = localStorage.getItem('token');\n      await axios.delete(`/api/events/${postId}/comments/${commentId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      fetchComments();\n    } catch (err) {\n      alert('Failed to delete comment');\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading comments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), comments.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this), comments.map(comment => {\n      var _comment$author;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.username) || 'Unknown'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), editingId === comment._id ? /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"edit-comment-form\",\n          onSubmit: e => handleEditSubmit(e, comment._id),\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: editText,\n            onChange: handleEditChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setEditingId(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), editError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: editError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-text\",\n            children: comment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-date\",\n            children: new Date(comment.createdAt).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), isAuthor(comment) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(comment),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(comment._id),\n              className: \"danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"lUIEEOSFAqGUvBn1HHbjoBJ91xY=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","CommentList","postId","_s","comments","setComments","loading","setLoading","error","setError","editingId","setEditingId","editText","setEditText","editError","setEditError","user","JSON","parse","localStorage","getItem","fetchComments","res","get","data","err","isAuthor","comment","author","id","_id","handleEdit","text","handleEditChange","e","target","value","handleEditSubmit","commentId","preventDefault","token","put","headers","Authorization","_err$response","_err$response$data","response","message","handleDelete","window","confirm","delete","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","_comment$author","username","onSubmit","onChange","required","type","onClick","Date","createdAt","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/chapl/bupue/bupue-frontend/src/components/comments/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Comments.css';\r\n\r\nconst CommentList = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [editingId, setEditingId] = useState(null);\r\n  const [editText, setEditText] = useState('');\r\n  const [editError, setEditError] = useState('');\r\n\r\n  const user = JSON.parse(localStorage.getItem('user') || 'null');\r\n\r\n  const fetchComments = async () => {\r\n    try {\r\n      const res = await axios.get(`/api/events/${postId}/comments`);\r\n      setComments(res.data);\r\n    } catch (err) {\r\n      setError('Failed to load comments');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n    // eslint-disable-next-line\r\n  }, [postId]);\r\n\r\n  const isAuthor = (comment) => user && comment.author && user.id === comment.author._id;\r\n\r\n  const handleEdit = (comment) => {\r\n    setEditingId(comment._id);\r\n    setEditText(comment.text);\r\n    setEditError('');\r\n  };\r\n\r\n  const handleEditChange = (e) => setEditText(e.target.value);\r\n\r\n  const handleEditSubmit = async (e, commentId) => {\r\n    e.preventDefault();\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.put(`/api/events/${postId}/comments/${commentId}`, { text: editText }, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setEditingId(null);\r\n      fetchComments();\r\n    } catch (err) {\r\n      setEditError(err.response?.data?.message || 'Failed to update comment');\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (commentId) => {\r\n    if (!window.confirm('Are you sure you want to delete this comment?')) return;\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      await axios.delete(`/api/events/${postId}/comments/${commentId}`, {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      fetchComments();\r\n    } catch (err) {\r\n      alert('Failed to delete comment');\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading comments...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"comments-list\">\r\n      <h4>Comments</h4>\r\n      {comments.length === 0 && <div>No comments yet.</div>}\r\n      {comments.map(comment => (\r\n        <div key={comment._id} className=\"comment-item\">\r\n          <div className=\"comment-author\">{comment.author?.username || 'Unknown'}</div>\r\n          {editingId === comment._id ? (\r\n            <form className=\"edit-comment-form\" onSubmit={e => handleEditSubmit(e, comment._id)}>\r\n              <textarea value={editText} onChange={handleEditChange} required />\r\n              <button type=\"submit\">Save</button>\r\n              <button type=\"button\" onClick={() => setEditingId(null)}>Cancel</button>\r\n              {editError && <div className=\"error\">{editError}</div>}\r\n            </form>\r\n          ) : (\r\n            <>\r\n              <div className=\"comment-text\">{comment.text}</div>\r\n              <div className=\"comment-date\">{new Date(comment.createdAt).toLocaleString()}</div>\r\n              {isAuthor(comment) && (\r\n                <div className=\"comment-actions\">\r\n                  <button onClick={() => handleEdit(comment)}>Edit</button>\r\n                  <button onClick={() => handleDelete(comment._id)} className=\"danger\">Delete</button>\r\n                </div>\r\n              )}\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}