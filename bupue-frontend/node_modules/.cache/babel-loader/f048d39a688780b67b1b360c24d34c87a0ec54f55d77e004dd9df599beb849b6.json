{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chapl\\\\bupue\\\\bupue-frontend\\\\src\\\\components\\\\cart\\\\PaymentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useNavigate } from 'react-router-dom';\nimport { useCart } from '../../context/CartContext';\nimport apiClient from '../../api/client';\nimport './Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = ({\n  clientSecret,\n  orderId,\n  onSuccess,\n  onError\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    clearCart\n  } = useCart();\n  const navigate = useNavigate();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    setError('');\n    if (!stripe || !elements) {\n      setError('Stripe has not loaded yet. Please wait.');\n      setLoading(false);\n      return;\n    }\n    const {\n      error: stripeError,\n      paymentIntent\n    } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (stripeError) {\n      setError(stripeError.message);\n      setLoading(false);\n      return;\n    }\n    if (paymentIntent.status === 'succeeded') {\n      try {\n        // Update order status to paid\n        await apiClient.patch(`/api/orders/${orderId}`, {\n          status: 'paid',\n          'paymentDetails.stripePaymentIntentId': paymentIntent.id,\n          'paymentDetails.paidAt': new Date().toISOString()\n        });\n        clearCart();\n        onSuccess(paymentIntent);\n        navigate('/orders');\n      } catch (err) {\n        setError('Payment succeeded but failed to update order. Please contact support.');\n        setLoading(false);\n      }\n    } else {\n      setError('Payment failed. Please try again.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"payment-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-element-container\",\n      children: /*#__PURE__*/_jsxDEV(CardElement, {\n        options: {\n          style: {\n            base: {\n              fontSize: '16px',\n              color: '#424770',\n              '::placeholder': {\n                color: '#aab7c4'\n              }\n            },\n            invalid: {\n              color: '#9e2146'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      className: \"payment-button\",\n      children: loading ? 'Processing...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"mZvZw9f1GAjvKue8a9ocDE6m4rs=\", false, function () {\n  return [useStripe, useElements, useCart, useNavigate];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","useNavigate","useCart","apiClient","jsxDEV","_jsxDEV","PaymentForm","clientSecret","orderId","onSuccess","onError","_s","stripe","elements","clearCart","navigate","loading","setLoading","error","setError","handleSubmit","event","preventDefault","stripeError","paymentIntent","confirmCardPayment","payment_method","card","getElement","message","status","patch","id","Date","toISOString","err","onSubmit","className","children","options","style","base","fontSize","color","invalid","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/chapl/bupue/bupue-frontend/src/components/cart/PaymentForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useCart } from '../../context/CartContext';\r\nimport apiClient from '../../api/client';\r\nimport './Cart.css';\r\n\r\nconst PaymentForm = ({ clientSecret, orderId, onSuccess, onError }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { clearCart } = useCart();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    setError('');\r\n\r\n    if (!stripe || !elements) {\r\n      setError('Stripe has not loaded yet. Please wait.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    const { error: stripeError, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n      }\r\n    });\r\n\r\n    if (stripeError) {\r\n      setError(stripeError.message);\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    if (paymentIntent.status === 'succeeded') {\r\n      try {\r\n        // Update order status to paid\r\n        await apiClient.patch(`/api/orders/${orderId}`, {\r\n          status: 'paid',\r\n          'paymentDetails.stripePaymentIntentId': paymentIntent.id,\r\n          'paymentDetails.paidAt': new Date().toISOString()\r\n        });\r\n\r\n        clearCart();\r\n        onSuccess(paymentIntent);\r\n        navigate('/orders');\r\n      } catch (err) {\r\n        setError('Payment succeeded but failed to update order. Please contact support.');\r\n        setLoading(false);\r\n      }\r\n    } else {\r\n      setError('Payment failed. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"payment-form\">\r\n      <div className=\"card-element-container\">\r\n        <CardElement\r\n          options={{\r\n            style: {\r\n              base: {\r\n                fontSize: '16px',\r\n                color: '#424770',\r\n                '::placeholder': {\r\n                  color: '#aab7c4',\r\n                },\r\n              },\r\n              invalid: {\r\n                color: '#9e2146',\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      \r\n      {error && <div className=\"payment-error\">{error}</div>}\r\n      \r\n      <button \r\n        type=\"submit\" \r\n        disabled={!stripe || loading} \r\n        className=\"payment-button\"\r\n      >\r\n        {loading ? 'Processing...' : 'Pay Now'}\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}