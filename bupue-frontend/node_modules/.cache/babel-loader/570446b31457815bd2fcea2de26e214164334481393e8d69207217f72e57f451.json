{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chapl\\\\bupue\\\\bupue-frontend\\\\src\\\\components\\\\comments\\\\CommentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Comments.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentList = ({\n  postId\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchComments = async () => {\n      try {\n        const res = await axios.get(`/api/posts/${postId}/comments`);\n        setComments(res.data);\n      } catch (err) {\n        setError('Failed to load comments');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchComments();\n  }, [postId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading comments...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), comments.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 33\n    }, this), comments.map(comment => {\n      var _comment$author;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-author\",\n          children: ((_comment$author = comment.author) === null || _comment$author === void 0 ? void 0 : _comment$author.username) || 'Unknown'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-text\",\n          children: comment.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-date\",\n          children: new Date(comment.createdAt).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, comment._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"rD5vJSITdYy6S122ZPiqyqz0m48=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CommentList","postId","_s","comments","setComments","loading","setLoading","error","setError","fetchComments","res","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","comment","_comment$author","author","username","text","Date","createdAt","toLocaleString","_id","_c","$RefreshReg$"],"sources":["C:/Users/chapl/bupue/bupue-frontend/src/components/comments/CommentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Comments.css';\r\n\r\nconst CommentList = ({ postId }) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async () => {\r\n      try {\r\n        const res = await axios.get(`/api/posts/${postId}/comments`);\r\n        setComments(res.data);\r\n      } catch (err) {\r\n        setError('Failed to load comments');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchComments();\r\n  }, [postId]);\r\n\r\n  if (loading) return <div>Loading comments...</div>;\r\n  if (error) return <div className=\"error\">{error}</div>;\r\n\r\n  return (\r\n    <div className=\"comments-list\">\r\n      <h4>Comments</h4>\r\n      {comments.length === 0 && <div>No comments yet.</div>}\r\n      {comments.map(comment => (\r\n        <div key={comment._id} className=\"comment-item\">\r\n          <div className=\"comment-author\">{comment.author?.username || 'Unknown'}</div>\r\n          <div className=\"comment-text\">{comment.text}</div>\r\n          <div className=\"comment-date\">{new Date(comment.createdAt).toLocaleString()}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}